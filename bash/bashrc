# Export variables
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_STATE_HOME="$HOME/.local/state"

export CARGO_HOME="$XDG_DATA_HOME/cargo"
export CUDA_CACHE_PATH="$XDG_CACHE_HOME/nv"
export ELINKS_CONFDIR="$XDG_CONFIG_HOME/elinks"
export GOPATH="$XDG_DATA_HOME/go"
export HISTFILE="$XDG_STATE_HOME/bash/history"
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/npmrc"
export RUSTUP_HOME="$XDG_DATA_HOME/rustup"
export WINEPREFIX="$XDG_DATA_HOME/wineprefixes/default"
export XAUTHORITY="$XDG_RUNTIME_DIR/Xauthority"
export XINITRC="$XDG_CONFIG_HOME/X11/xinitrc"

export PATH="${PATH:+${PATH}:}$HOME/.local/bin:$CARGO_HOME/bin:$GOPATH/bin:/usr/local/games:/usr/games"

command -v bat &> /dev/null && export BAT_THEME="Dracula" && export PAGER="bat -p"
command -v clang &> /dev/null && export CC="clang"
command -v clang++ &> /dev/null && export CXX="clang++"
command -v ninja &> /dev/null && export CMAKE_GENERATOR="Ninja"
command -v nvim &> /dev/null && export EDITOR="nvim"

export EXA_COLORS="da=35"
export PS1="\[$(tput bold)\]\[\033[38;5;5m\][\[$(tput bold)\]\[\033[38;5;2m\]\u\[$(tput bold)\]\[\033[38;5;5m\]@\[$(tput bold)\]\[\033[38;5;3m\]\w\[$(tput bold)\]\[\033[38;5;5m\]]\[$(tput bold)\] \[$(tput bold)\]\[\033[38;5;1m\]\$?\[$(tput bold)\]\[\033[38;5;6m\]\\$\[$(tput bold)\] \[$(tput sgr0)\]"

# Dracula theme for Linux TTY
if [[ "$TERM" = "linux" ]]; then
	printf %b '\e[40m' '\e[8]'
	printf %b '\e[37m' '\e[8]'
	printf %b '\e]P0282a36'
	printf %b '\e]P86272a4'
	printf %b '\e]P1ff5555'
	printf %b '\e]P9ff7777'
	printf %b '\e]P250fa7b'
	printf %b '\e]PA70fa9b'
	printf %b '\e]P3f1fa8c'
	printf %b '\e]PBffb86c'
	printf %b '\e]P4bd93f9'
	printf %b '\e]PCcfa9ff'
	printf %b '\e]P5ff79c6'
	printf %b '\e]PDff88e8'
	printf %b '\e]P68be9fd'
	printf %b '\e]PE97e2ff'
	printf %b '\e]P7f8f8f2'
	printf %b '\e]PFffffff'
	clear
fi

# Programs and stuff
command -v mcfly &> /dev/null && export MCFLY_FUZZY="2" && export MCFLY_KEY_SCHEME="vim" && eval "$(mcfly init bash)"
command -v zoxide &> /dev/null && eval "$(zoxide init bash)"
[[ -f /usr/share/bash-completion/bash_completion ]] || [[ -f /usr/local/share/bash-completion/bash_completion ]] && . /usr/share/bash-completion/bash_completion

# Autocomplete settings
bind "set completion-ignore-case on"
bind "set show-all-if-ambiguous on"
bind "TAB:menu-complete"
bind "\"\e[Z\":menu-complete-backward"
complete -cf s

# Aliases/functions
alias bc="bc -ql"
alias c="$PAGER"
alias cp="cp -iv"
alias ctl="systemctl"
alias dad="curl -sL 'icanhazdadjoke.com'"
alias diff="diff --color=auto"
alias g="git"
alias ip="ip --color=auto"
alias ka="killall"
alias l="exa -as='Name' --group-directories-first"
alias ll="exa -las='Name' --group-directories-first"
alias m="batman"
alias mk="make"
alias mkd="mkdir -pv"
alias mv="mv -iv"
alias nyan="curl -sL 'ascii.live/nyan'"
alias p="paru"
alias parrot="curl -sL 'parrot.live'"
alias pkgclean="paru -c && paru -Sc && paccache -r"
alias pp="prettyping"
alias rick="curl -sL 'ascii.live/rick'"
alias rm="rm -vI"
alias s="doas "
alias sx="startx"
alias t="touch"
alias tp="htop"
alias v="$EDITOR"
cht() { curl -sL "cht.sh/$1"; }
crypto() { curl -sL "rate.sx/$1"; }
dict() { curl -sL "dict://dict.org/d:$1"; }
gitignore() { curl -sL "gitignore.io/api/$1"; }
pubip() { curl -sL "ifconfig.co/$1"; }
weather() { curl -sL "wttr.in/$1"; }

# It's better than Neofetch (:
command -v pfetch &> /dev/null && export PF_INFO="ascii title host kernel os shell uptime memory wm palette" && pfetch
